"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventId=4624 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-10-04 08:32:13' and '2022-10-04 14:32:13' ) OR ( `source:type`='linux-events' AND `SourceName.keyword`='sshd' AND Message like 'Accepted password%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-10-04 08:32:13' and '2022-10-04 14:32:13' ) GROUP BY ip_src_addr ,REGEXP_SUBSTR(message,'(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)')","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventId=4720 AND PrimaryGroupId!=513 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-10-04 08:32:13' and '2022-10-04 14:32:13' ) OR ( `source:type`='linux-events' AND Message like 'delete user%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-10-04 08:32:13' and '2022-10-04 14:32:13' ) GROUP BY ip_src_addr ,REGEXP_SUBSTR(message,'(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)')","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.NotEqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM someTable WHERE `CusotmerID.keyword`='enovise' AND timestamp BETWEEN '2022-10-04 08:32:13' AND '2022-10-04 14:32:13' GROUP BY `Hostname.keyword` ORDER BY `Hostname.keyword` DESC LIMIT 1","`Hostname.keyword`","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventId=4625 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-10-04 08:32:13' and '2022-10-04 14:32:13' ) OR ( `source:type`='linux-events' AND `SourceName.keyword`='sshd' AND Message like 'Failed password%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-10-04 08:32:13' and '2022-10-04 14:32:13' ) GROUP BY `TargetUsername.keyword`,somecolumn","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT count(*) FROM sometable LIMIT 0","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventId=4720 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-10-04 08:32:13' and '2022-10-04 14:32:13' ) OR ( `source:type`='linux-events' AND Message like 'new user%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-10-04 08:32:13' and '2022-10-04 14:32:13' ) GROUP BY ip_src_addr ,REGEXP_SUBSTR(message,'(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)')","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM someTable WHERE `CusotmerID.keyword`='enovise' AND timestamp BETWEEN '2022-10-04 08:32:13' AND '2022-10-04 14:32:13' GROUP BY `Hostname.keyword` ","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventId=4726 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-10-04 08:32:13' and '2022-10-04 14:32:13' ) OR ( `source:type`='linux-events' AND Message like 'delete user%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-10-04 08:32:13' and '2022-10-04 14:32:13' ) GROUP BY ip_src_addr,REGEXP_SUBSTR(message,'(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)')","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM sometable WHERE timestamp BETWEEN '2022-10-02 03:25:00' AND '2022-10-07 09:25:00' AND `CustomerID.keyword`='enovise' GROUP BY timestamp LIMIT 0","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventId=4724 AND PrimaryGroupId!=513 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-10-04 08:32:13' and '2022-10-04 14:32:13' ) OR ( `source:type`='linux-events' AND Message like 'Password changed%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-10-04 08:32:13' and '2022-10-04 14:32:13' ) GROUP BY ip_src_addr, REGEXP_SUBSTR(message,'(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)')","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.NotEqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventId=4624 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-10-04 08:32:13' and '2022-10-04 14:32:13' ) OR ( `source:type`='linux-events' AND `SourceName.keyword`='sshd' AND Message like 'Accepted password%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-10-04 08:32:13' and '2022-10-04 14:32:13' ) GROUP BY ip_src_addr,soomecolumn","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM someTable WHERE `CusotmerID.keyword`='enovise' AND timestamp BETWEEN '2022-10-04 08:32:13' AND '2022-10-04 14:32:13' GROUP BY `Hostname.keyword` ","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SELECT * FROM someTable WHERE `CusotmerID.keyword`='enovise' AND timestamp BETWEEN '2022-10-04 08:32:13' AND '2022-10-04 14:32:13' GROUP BY `Hostname.keyword` LIMIT 25","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SELECT * FROM someTable WHERE `CusotmerID.keyword`='enovise' AND timestamp BETWEEN '2022-10-04 08:32:13' AND '2022-10-04 14:32:13' GROUP BY `Hostname.keyword` LIMIT 1","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SELECT * FROM someTable WHERE `CusotmerID.keyword`='enovise' AND timestamp BETWEEN '2022-10-04 08:32:13' AND '2022-10-04 14:32:13' GROUP BY `Hostname.keyword` LIMIT 1","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SELECT * FROM someTable WHERE `CusotmerID.keyword`='enovise' AND timestamp BETWEEN '2022-10-04 08:32:13' AND '2022-10-04 14:32:13' GROUP BY `Hostname.keyword` ORDER BY `Hostname.keyword` DESC LIMIT 1","`Hostname.keyword`","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SELECT * FROM someTable WHERE `CusotmerID.keyword`='enovise' AND timestamp BETWEEN '2022-10-04 08:32:13' AND '2022-10-04 14:32:13' GROUP BY `Hostname.keyword` ORDER BY `Hostname.keyword` DESC LIMIT 1","`Hostname.keyword`","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SELECT * FROM someTable WHERE `CusotmerID.keyword`='enovise' AND timestamp BETWEEN '2022-10-04 08:32:13' AND '2022-10-04 14:32:13' GROUP BY `Hostname.keyword` LIMIT 1","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SELECT * FROM sometable WHERE timestamp BETWEEN '2022-10-02 03:25:00' AND '2022-10-07 09:25:00' AND `CustomerID.keyword`='enovise' GROUP BY timestamp LIMIT 10","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SELECT * FROM sometable WHERE timestamp BETWEEN '2022-10-02 03:25:00' AND '2022-10-07 09:25:00' AND `CustomerID.keyword`='enovise' GROUP BY timestamp LIMIT 10","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SELECT * FROM sometable WHERE timestamp BETWEEN '2022-10-02 03:25:00' AND '2022-10-07 09:25:00' AND `CustomerID.keyword`='enovise' GROUP BY timestamp LIMIT 10","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SELECT * FROM sometable WHERE timestamp BETWEEN '2022-10-02 03:25:00' AND '2022-10-07 09:25:00' AND `CustomerID.keyword`='enovise' GROUP BY timestamp LIMIT 10","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SELECT * FROM sometable WHERE timestamp BETWEEN '2022-10-02 03:25:00' AND '2022-10-07 09:25:00' AND `CustomerID.keyword`='enovise' GROUP BY timestamp LIMIT 10","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SELECT * FROM sometable WHERE timestamp BETWEEN '2022-10-02 03:25:00' AND '2022-10-07 09:25:00' AND `CustomerID.keyword`='enovise' GROUP BY timestamp LIMIT 10","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SELECT * FROM someTable WHERE `CusotmerID.keyword`='enovise' AND timestamp BETWEEN '2022-10-04 08:32:13' AND '2022-10-04 14:32:13' GROUP BY `Hostname.keyword` LIMIT 1","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SELECT * FROM someTable WHERE `CustomerID.keyword`='enovise' AND timestamp BETWEEN '2022-10-04 08:32:13' AND '2022-10-04 14:32:13' GROUP BY `Hostname.keyword` LIMIT 1","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SELECT * FROM sometable WHERE timestamp BETWEEN '2022-10-02 03:25:00' AND '2022-10-07 09:25:00' AND `CustomerID.keyword`='enovise' GROUP BY timestamp LIMIT 10","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SELECT * FROM someTable WHERE `CustomerID.keyword`='enovise' AND timestamp BETWEEN '2022-10-04 08:32:13' AND '2022-10-04 14:32:13' GROUP BY `Hostname.keyword` LIMIT 20","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SELECT * FROM someTable WHERE `CustomerID.keyword`='enovise' AND timestamp BETWEEN '2022-10-04 08:32:13' AND '2022-10-04 14:32:13' GROUP BY `Hostname.keyword` ORDER BY `Hostname.keyword` DESC LIMIT 1","`Hostname.keyword`","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SELECT count(*) FROM sometable LIMIT 0","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventId=4625 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-10-04 08:32:13' and '2022-10-04 14:32:13' ) OR ( `source:type`='linux-events' AND `SourceName.keyword`='sshd' AND Message like 'Failed password%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-10-04 08:32:13' and '2022-10-04 14:32:13' ) GROUP BY `TargetUsername.keyword`,somecolumn","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventId=4625 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-10-04 08:32:13' and '2022-10-04 14:32:13' ) OR ( `source:type`='linux-events' AND Message like 'Failed password%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-10-04 08:32:13' and '2022-10-04 14:32:13' ) GROUP BY `TargetUsername.keyword`,somecolumn","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventID=4625 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-10-04 08:32:13' and '2022-10-04 14:32:13' ) OR ( `source:type`='linux-events' AND Message like 'Failed password%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-10-04 08:32:13' and '2022-10-04 14:32:13' ) GROUP BY `TargetUsername.keyword`,somecolumn","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventId=4624 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-10-04 08:32:13' and '2022-10-04 14:32:13' ) OR ( `source:type`='linux-events' AND Message like 'Accepted password%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-10-04 08:32:13' and '2022-10-04 14:32:13' ) GROUP BY ip_src_addr,soomecolumn","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventID=4625 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-10-04 08:32:13' and '2022-10-04 14:32:13' ) OR ( `source:type`='linux-events' AND Message like 'Failed password%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-10-04 08:32:13' and '2022-10-04 14:32:13' ) GROUP BY `TargetUsername.keyword`,somecolumn","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventID=4625 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) OR ( `source:type`='linux-events' AND Message like 'Failed password%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) GROUP BY `TargetUsername.keyword`,somecolumn","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventID=4624 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) OR ( `source:type`='linux-events' AND Message like 'Accepted password%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) GROUP BY ip_src_addr,soomecolumn","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventID=4624 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) OR ( `source:type`='linux-events' AND Message like 'Accepted password%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) GROUP BY ip_src_addr ,REGEXP_SUBSTR(message,'(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)')","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventID=4625 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) OR ( `source:type`='linux-events' AND Message like 'Failed password%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) GROUP BY `TargetUsername.keyword`,somecolumn","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventID=4625 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) OR ( `source:type`='linux-events' AND Message like 'Failed password%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) GROUP BY `TargetUsername.keyword`,somecolumn","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventID=4625 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) OR ( `source:type`='linux-events' AND Message like 'Failed password%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) GROUP BY `TargetUsername.keyword`,somecolumn","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM sometable WHERE `source:type`='windows-events' AND EventID=4625 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' GROUP BY `TargetUsername.keyword`,somecolumn","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","","","","","","","","","","","","","","","","","","","","","","","",""
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventID=4625 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) OR ( `source:type`='linux-events' AND Message like 'Failed password%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) GROUP BY `TargetUserName.keyword`,somecolumn","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventID=4625 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) OR ( `source:type`='linux-events' AND Message like 'Failed password%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) GROUP BY `TargetUserName.keyword`,somecolumn","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventID=4624 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) OR ( `source:type`='linux-events' AND Message like 'Accepted password%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) GROUP BY ip_src_addr,substring_index(substring(Message,21),' ',1)","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventID=4624 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) OR ( `source:type`='linux-events' AND Message like 'Accepted password%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) GROUP BY ip_src_addr,substring_index(substring(Message,21),' ',1)","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventID=4624 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) OR ( `source:type`='linux-events' AND Message like 'Accepted password%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) GROUP BY ip_src_addr,substring_index(substring(Message,21),' ',1)","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventID=4624 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) OR ( `source:type`='linux-events' AND Message like 'Accepted password%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) GROUP BY ip_src_addr,substring_index(substring(Message,21),' ',1)","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventID=4624 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) OR ( `source:type`='linux-events' AND Message like 'Accepted password%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) GROUP BY ip_src_addr,substring_index(substring(Message,21),' ',1)","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventID=4624 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) OR ( `source:type`='linux-events' AND Message like 'Accepted password%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) GROUP BY ip_src_addr,substring_index(substring(Message,21),' ',1)","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventID=4624 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) OR ( `source:type`='linux-events' AND Message like 'Accepted password%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) GROUP BY ip_src_addr,substring_index(substring(Message,21),' ',1)","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventID=4720 AND PrimaryGroupId!=513 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) OR ( `source:type`='linux-events' AND Message like 'delete user%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) GROUP BY ip_src_addr ,REGEXP_SUBSTR(message,'(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)')","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.NotEqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventID=4625 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) OR ( `source:type`='linux-events' AND Message like 'Failed password%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) GROUP BY `TargetUserName.keyword`,`Message.username`","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
"SELECT * FROM sometable WHERE (`source:type`='windows-events' AND EventID=4624 AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) OR ( `source:type`='linux-events' AND Message like 'Accepted password%' AND `CustomerID.keyword`='enovise' AND timestamp between '2022-09-01 00:00:00' and '2022-10-17 23:59:59' ) GROUP BY `TargetUserName.keyword`,`Message.username`","net.sf.jsqlparser.expression.operators.conditional.OrExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.LongValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.Parenthesis","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.conditional.AndExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.LikeExpression","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.EqualsTo","net.sf.jsqlparser.expression.BinaryExpression","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.operators.relational.Between","net.sf.jsqlparser.schema.Column","net.sf.jsqlparser.expression.StringValue","net.sf.jsqlparser.expression.StringValue"
